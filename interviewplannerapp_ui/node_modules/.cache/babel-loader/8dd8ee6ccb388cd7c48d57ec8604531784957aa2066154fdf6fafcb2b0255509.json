{"ast":null,"code":"import http from \"../http-common\";\nclass QuestionService {\n  getAllQuestions(searchDTO) {\n    console.log(searchDTO);\n    return this.getRequest(`/question/questions`, searchDTO);\n  }\n  get(questionId) {\n    return this.getRequest(`/question/${questionId}`, null);\n  }\n  findByField(matchData) {\n    return this.getRequest(`/question?field=${matchData}`, null);\n  }\n  addQuestion(data) {\n    return http.post(\"/question/addQuestion\", data);\n  }\n  update(data) {\n    return http.post(\"/question/updateQuestion\", data);\n  }\n  uploadImage(data, questionId) {\n    return http.postForm(\"/question/uploadImage/\" + questionId, data);\n  }\n  postRequest(url, data) {\n    return http.post(url, data);\n  }\n  getRequest(url, params) {\n    return http.get(url, {\n      params: params\n    });\n  }\n}\nexport default new QuestionService();","map":{"version":3,"names":["http","QuestionService","getAllQuestions","searchDTO","console","log","getRequest","get","questionId","findByField","matchData","addQuestion","data","post","update","uploadImage","postForm","postRequest","url","params"],"sources":["/interviewplannerapp/interviewplannerapp_ui/src/services/QuestionService.js"],"sourcesContent":["import http from \"../http-common\"; \n\nclass QuestionService {\n  getAllQuestions(searchDTO) {\n    console.log(searchDTO)\n    return this.getRequest(`/question/questions`, searchDTO);\n  }\n\n  get(questionId) {\n    return this.getRequest(`/question/${questionId}`, null);\n  }\n\n  findByField(matchData) {\n    return this.getRequest(`/question?field=${matchData}`, null);\n  }\n\n  addQuestion(data) {\n    return http.post(\"/question/addQuestion\", data);\n  }\n\n  update(data) {\n  \treturn http.post(\"/question/updateQuestion\", data);\n  }\n  \n  uploadImage(data,questionId) {\n  \treturn http.postForm(\"/question/uploadImage/\"+questionId, data);\n  }\n\n\n\n\n\tpostRequest(url, data) {\n\t\treturn http.post(url, data);\n      };\n\n\tgetRequest(url, params) {\n        return http.get(url, {\n        \tparams: params\n        });\n    };\n\n}\n\nexport default new QuestionService();\n"],"mappings":"AAAA,OAAOA,IAAI,MAAM,gBAAgB;AAEjC,MAAMC,eAAe,CAAC;EACpBC,eAAeA,CAACC,SAAS,EAAE;IACzBC,OAAO,CAACC,GAAG,CAACF,SAAS,CAAC;IACtB,OAAO,IAAI,CAACG,UAAU,CAAC,qBAAqB,EAAEH,SAAS,CAAC;EAC1D;EAEAI,GAAGA,CAACC,UAAU,EAAE;IACd,OAAO,IAAI,CAACF,UAAU,CAAC,aAAaE,UAAU,EAAE,EAAE,IAAI,CAAC;EACzD;EAEAC,WAAWA,CAACC,SAAS,EAAE;IACrB,OAAO,IAAI,CAACJ,UAAU,CAAC,mBAAmBI,SAAS,EAAE,EAAE,IAAI,CAAC;EAC9D;EAEAC,WAAWA,CAACC,IAAI,EAAE;IAChB,OAAOZ,IAAI,CAACa,IAAI,CAAC,uBAAuB,EAAED,IAAI,CAAC;EACjD;EAEAE,MAAMA,CAACF,IAAI,EAAE;IACZ,OAAOZ,IAAI,CAACa,IAAI,CAAC,0BAA0B,EAAED,IAAI,CAAC;EACnD;EAEAG,WAAWA,CAACH,IAAI,EAACJ,UAAU,EAAE;IAC5B,OAAOR,IAAI,CAACgB,QAAQ,CAAC,wBAAwB,GAACR,UAAU,EAAEI,IAAI,CAAC;EAChE;EAKDK,WAAWA,CAACC,GAAG,EAAEN,IAAI,EAAE;IACtB,OAAOZ,IAAI,CAACa,IAAI,CAACK,GAAG,EAAEN,IAAI,CAAC;EACvB;EAELN,UAAUA,CAACY,GAAG,EAAEC,MAAM,EAAE;IACjB,OAAOnB,IAAI,CAACO,GAAG,CAACW,GAAG,EAAE;MACpBC,MAAM,EAAEA;IACT,CAAC,CAAC;EACN;AAEJ;AAEA,eAAe,IAAIlB,eAAe,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}